/* .buttonNav {
    display: inline-block;
    padding: 0 0;
    font-size: 24px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    outline: none;
    border: none;
    border-radius: 15px;
  }
  
  
  .buttonNav:active {
    transform: translateY(4px);
  } */
======================================================

import Head from 'next/head'
import Link from 'next/link'
import Layout from '../../components/Layout'
import { useState } from 'react'
import { withRouter } from 'next/router';
import { listBlogsCategoriesTags } from '../../actions/blog'
import moment from 'moment'
import renderHtml from 'react-render-html'
import Card from '../../components/blog/card'
import { API, DOMAIN, APP_NAME } from '../../config'

const Blogs = ({ blogs, categories, tags, totalBlogs, blogsLimit, blogSkip, router }) => {
    const [limit, setLimit] = useState(blogsLimit)
    const [skip, setSkip] = useState(0)
    const [size, setSize] = useState(totalBlogs)
    const [loadedBlogs, setLoadedBlogs] = useState([])


    const loadMore = () => {
        let toSkip = skip + limit
        listBlogsCategoriesTags(toSkip, limit)
            .then(data => {
                if (data.error) {
                    console.log(data.error)
                } else {
                    setLoadedBlogs([...loadedBlogs, ...data.blogs])
                    setSize(data.size)
                    setSkip(toSkip)
                }
            })
    }

    const loadMoreButton = () => {
        return (
            size > 0 && size >= limit && (
                <button
                    onClick={loadMore}
                    className='btn btn-primary btn-lg'
                >Load More</button>
            )
        )
    }

    const head = () => (
        <Head>
            <title>
                Programming Blogs | {APP_NAME}
            </title>
            <meta
                name='description'
                content='Programming blogs and tutorials'
            ></meta>
            <link rel='canonical' href={`${DOMAIN}${router.pathname}`} />
            <meta property='og:title' content={`Latest web development tutorials | ${APP_NAME}`} />
            <meta property='og:type' content='website'></meta>
            <meta property='og:url' content={`${DOMAIN}${router.pathname}`}></meta>
            <meta property='og:site_name' content={`${APP_NAME}`}></meta>
            <meta property='og:image' content='/static/images/SEO-BLOG.png'></meta>

            <meta property='og:name' content={`${APP_NAME}`}></meta>
            <meta property='og:image:secure_url' content={`${APP_NAME}`}></meta>
            <meta property='og:image:type' content={`${APP_NAME}`}></meta>
            <meta property='fb:app_id' content={`${APP_NAME}`}></meta>


        </Head>
    )

    const showAllBlogs = () => {
        return blogs.map((blog, i) => {
            return <article key={i}>
                <Card blog={blog} />
                <hr />
            </article>
        })
    }



    const showLoadedBlogs = () => {
        return loadedBlogs.map((blog, i) => {
            return <article key={i}>
                <Card blog={blog} />
                <hr />
            </article>
        })
    }

    const showAllCategories = () => {
        return categories.map((c, i) => {
            return <Link href={`/categories/${c.slug}`} key={i}>
                <a className='btn btn-primary mr-1 ml-1 mt-3'>
                    {c.name}
                </a>
            </Link>
        })
    }
    const showAllTags = () => {
        return (tags.map((t, i) => {
            return <Link href={`/tags/${t.slug}`} key={i}>
                <div className='btn btn-outline-primary mr-1 ml-1 mt-3'>
                    {t.name}
                </div>
            </Link>
        }))
    }

    return (<Layout>
        <main>
            <div
                className='container-fluid pb-2'>
                <header>
                    <div className='row'>
                        <div className='col-md-12 pt-3'>
                            <h1 className='display-4  font-weight-bold                                     text-center'>
                                Programming Blogs & Tutorials
                                    </h1>
                        </div>
                        <div className='col-md-12 pb-5 text-center'>
                            <section>

                                {showAllCategories()}
                                <br />
                                {showAllTags()}
                            </section>
                        </div>
                    </div>
                </header>
            </div>
            <div className='container0fluid'>
                <div className='row'>
                    <div className='col-md-12'>
                        <div className='container-fluid'>
                            {showAllBlogs()}
                        </div>
                        <div className='container-fluid'>

                            {showLoadedBlogs()}
                        </div>
                        <div className='text-center pt-5 pb-5'>

                            {loadMoreButton()}
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </Layout>
    )
}


Blogs.getInitialProps = () => {

    let skip = 0
    let limit = 2
    return listBlogsCategoriesTags(skip, limit)
        .then(data => {
            if (data.error) {
                console.log(data.error)
            } else {
                return {
                    blogs: data.blogs,
                    categories: data.categories,
                    tags: data.tags,
                    size: data.size,
                    blogLimit: limit,
                    blogSkip: skip

                }
            }
        })
}

export default withRouter(Blogs)
=======================================

    {/* <meta property="fb:app_id" content={`${FB_APP_ID}`} /> */}